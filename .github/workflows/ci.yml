name: Brim CI

on:
  pull_request:
  push:
    branches:
      - main

defaults:
  run:
    shell: bash

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-10.15, ubuntu-18.04, windows-2019 ]
    steps:
      - uses: denolib/setup-deno@v2
        with:
          deno-version: v1.7.2
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - uses: actions/setup-go@v2
        with:
          go-version: '1.16'
      - run: git config --global core.autocrlf false
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            ~/AppData/npm-cache
            ~/go/pkg/mod
          key: |
            ${{ matrix.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ matrix.os }}-
      # --unsafe-perm allows npm to install brimdata/brimcap and brimdata/zed as root.
      - run: npm install --no-audit --unsafe-perm
      - run: npm run format-check
      - run: npm run build
      - run: npm run lint
      - run: npm run tsc
      - run: npm test -- --maxWorkers=2 --ci
      - run: npm run test:api
      - name: Integration Tests
        run: |
          set -x
          case ${{ matrix.os }} in
            centos-* )
              npx electron-builder --linux=rpm
              dnf -y --setopt=install_weak_deps=False install alsa-lib mesa-libgbm dist/installers/*.rpm
              # Tell spectron/lib/application.js to run Chrome with the
              # "no-sandbox" option, which is required when running as root.
              export APPVEYOR=true
              xvfb-run -d -s '-screen 0 1280x1024x24' npm run itest -- --ci --forceExit
              ;;
            ubuntu-* )
              npx electron-builder --linux=deb
              sudo apt install -y --no-install-recommends ./dist/installers/*.deb
              xvfb-run -a -s '-screen 0 1280x1024x24' npm run itest -- --ci --forceExit
              ;;
            windows-* )
              pwsh -command 'npm run itest -- --ci --forceExit'
              ;;
            * )
              npm run itest -- --ci --forceExit
              ;;
          esac
      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: artifacts-${{ matrix.os }}
          path: run/itest

  test-centos:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: centos-8
    container:
      image: centos:8
    steps:
      - name: Install Prerequisites
        run: |
          dnf -y --setopt=install_weak_deps=False install \
            gcc gcc-c++ git-core glibc-all-langpacks \
            libsecret make pkg-config python3 rpm-build \
            xorg-x11-server-Xvfb

      # Steps after this point are (and should remain) identical to jobs.test.steps.

      - uses: denolib/setup-deno@v2
        with:
          deno-version: v1.7.2
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - uses: actions/setup-go@v2
        with:
          go-version: '1.16'
      - run: git config --global core.autocrlf false
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            ~/AppData/npm-cache
            ~/go/pkg/mod
          key: |
            ${{ matrix.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ matrix.os }}-
      # --unsafe-perm allows npm to install brimdata/brimcap and brimdata/zed as root.
      - run: npm install --no-audit --unsafe-perm
      - run: npm run format-check
      - run: npm run build
      - run: npm run lint
      - run: npm run tsc
      - run: npm test -- --maxWorkers=2 --ci
      - run: npm run test:api
      - name: Integration Tests
        run: |
          set -x
          case ${{ matrix.os }} in
            centos-* )
              npx electron-builder --linux=rpm
              dnf -y --setopt=install_weak_deps=False install alsa-lib mesa-libgbm dist/installers/*.rpm
              # Tell spectron/lib/application.js to run Chrome with the
              # "no-sandbox" option, which is required when running as root.
              export APPVEYOR=true
              xvfb-run -d -s '-screen 0 1280x1024x24' npm run itest -- --ci --forceExit
              ;;
            ubuntu-* )
              npx electron-builder --linux=deb
              sudo apt install -y --no-install-recommends ./dist/installers/*.deb
              xvfb-run -a -s '-screen 0 1280x1024x24' npm run itest -- --ci --forceExit
              ;;
            windows-* )
              pwsh -command 'npm run itest -- --ci --forceExit'
              ;;
            * )
              npm run itest -- --ci --forceExit
              ;;
          esac
      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: artifacts-${{ matrix.os }}
          path: run/itest
